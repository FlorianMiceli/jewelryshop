{
    "Catalogue résumé" : "SELECT colliers.nomcollier AS Nom, colliers.prixcollier AS Prix FROM colliers WHERE colliers.catalogue = '2022' UNION ALL SELECT chaines.nomchaine AS Nom, chaines.prixchaine AS Prix FROM chaines WHERE chaines.catalogue = '2022' UNION ALL SELECT perles.nomperle AS Nom, perles.prixperle AS Prix FROM perles WHERE perles.catalogue = '2022';",
    "Catalogue détaillé1" : "SELECT CASE WHEN c.NomCollier = lag(c.NomCollier) OVER ( ORDER BY c.idcollier ) THEN '' ELSE c.NomCollier END AS NomCollier, CASE WHEN ch.NomChaine = lag(ch.NomChaine) OVER ( PARTITION BY c.idCollier ORDER BY c.idcollier, ch.idChaine ) THEN '' ELSE ch.NomChaine END AS NomChaine, nbPerle, NomPerle, CASE WHEN c.PrixCollier = lag(c.PrixCollier) OVER ( ORDER BY c.idcollier ) THEN NULL ELSE c.PrixCollier END AS PrixCollier FROM colliers AS c JOIN pendentifs AS p ON p.idCollier = c.idCollier AND p.Nomproduit = c.typeProduit JOIN Perles AS po ON p.idPerle = po.idPerle AND p.typeProduit = po.typeProduit LEFT JOIN Chaines AS ch ON c.idChaine = ch.idChaine AND ch.typeProduit = c.NomProduit ORDER BY c.idcollier ASC;",
    "Catalogue détaillé2" : "SELECT CASE WHEN c.NomCollier = lag(c.NomCollier) OVER ( ORDER BY c.idcollier ) THEN '' ELSE c.NomCollier END AS NomCollier, nbPerle, NomPerle, CASE WHEN c.PrixCollier = lag(c.PrixCollier) OVER ( ORDER BY c.idcollier ) THEN NULL ELSE c.PrixCollier END AS PrixCollier FROM colliers AS c JOIN pendentifs AS p ON p.idCollier = c.idCollier AND p.Nomproduit = c.typeProduit JOIN Perles AS po ON p.idPerle = po.idPerle AND p.typeProduit = po.typeProduit WHERE c.idChaine IS NULL ORDER BY c.idcollier ASC;",
    "Catalogue détaillé" : "SELECT CASE WHEN c.NomCollier = lag(c.NomCollier) OVER (ORDER BY c.idcollier) THEN '' ELSE c.NomCollier END AS NomCollier, CASE WHEN ch.NomChaine = lag(ch.NomChaine) OVER (ORDER BY c.idcollier) THEN '' ELSE ch.NomChaine END AS NomChaine, CONCAT(nbperle, 'x ',po.NomPerle) AS Perle, CASE WHEN c.PrixCollier = lag(c.PrixCollier) OVER (ORDER BY c.idcollier) THEN NULL ELSE c.PrixCollier END AS PrixCollier FROM colliers AS c JOIN pendentifs AS p ON p.idCollier = c.idCollier AND p.Nomproduit = c.typeProduit JOIN Perles AS po ON p.idPerle = po.idPerle AND p.typeProduit = po.typeProduit JOIN Chaines AS ch ON c.idChaine = ch.idChaine AND ch.typeProduit = c.nomProduit WHERE ch.NomChaine is not null AND p.nbPerle is not null ORDER BY c.idcollier ASC;",
    "Catalogue ciblé par perles" : "SELECT DISTINCT c.nomcollier, c.prixcollier FROM colliers AS c JOIN pendentifs AS p ON p.idcollier = c.idcollier AND c.typeProduit = p.nomproduit JOIN perles AS pe ON pe.idperle = p.idperle AND pe.typeProduit = p.typeProduit WHERE pe.catalogue = 2023 GROUP BY c.nomcollier, c.prixcollier HAVING COUNT(*) > 0;",
    "Catalogue ciblé des bijoux par tarif" : "SELECT c.nomcollier, c.prixcollier from colliers c where c.prixcollier<12 union select p.nomperle, p.prixperle from perles p where p.prixperle<12 union  select ch.nomchaine, ch.prixchaine from chaines ch where ch.prixchaine<12;",
    "Catalogue ciblé des perles par tarif" : "SELECT p.nomperle, p.prixperle from perles p where p.prixperle>4;",
    "Catalogue des généralistes" : "SELECT c.nomcollier, c.prixcollier FROM colliers c JOIN pendentifs p ON p.idcollier = c.idcollier AND c.typeProduit = p.typeProduit JOIN perles pe ON pe.typeProduit = p.typeProduit GROUP BY c.nomcollier, c.prixcollier HAVING COUNT(DISTINCT pe.idperle) = (SELECT COUNT(*) FROM perles);",
    "Etat des stock des chaînes" : "SELECT chaines.nomchaine, chaines.prixchaine FROM chaines WHERE chaines.stock > 0;",
    "Etat des stock des perles" : "SELECT perles.nomperle, perles.prixPerle FROM perles WHERE perles.stock > 0;",
    "Etat des stock des colliers" : "SELECT DISTINCT c.nomCollier AS Nom_Collier, c.prixCollier AS Prix FROM colliers AS c JOIN pendentifs AS p ON p.idCollier = c.idCollier AND p.Nomproduit = c.typeProduit JOIN Perles AS po ON p.idPerle = po.idPerle AND p.typeProduit = po.typeProduit JOIN Chaines AS ch ON c.idChaine = ch.idChaine AND ch.typeProduit = c.nomProduit WHERE p.nbPerle <= po.stock AND ch.stock > 0;",
    "Publicité des promotions" : "SELECT nomCollier as Nom_Collier, cast((prixcollier - prixcollier * pourcentagereduction / 100) as numeric(10, 2)) as Prix from colliers as c join promotions as pr on pr.typeProduit = c.typeProduit and pr.idProduit = c.idCollier where now() > datedebut and now() < datefin;",
    "Historique des promotions" : "SELECT NomCollier as Nom_Collier, cast((prixcollier - prixcollier * pourcentagereduction / 100) as numeric(10, 2)) as Prix, datedebut, datefin from colliers as c join promotions as pr on pr.typeProduit = c.typeProduit and pr.idProduit = c.idCollier;",
    "Documentation edondance" : "",
    "Documentation des symétriques" : "SELECT C.idCollier, C.nomCollier FROM COLLIERS C INNER JOIN PENDENTIFS PT ON C.idCollier = PT.idCollier GROUP BY C.idCollier, C.nomCollier HAVING COUNT(DISTINCT PT.nbPerle) = 1;",
    "Publicité « avantage »" : "",
    "Etiquette collier" : "SELECT CASE WHEN c.NomCollier = lag(c.NomCollier) OVER (ORDER BY c.idcollier) THEN '' ELSE c.NomCollier END AS NomCollier, CASE WHEN ch.NomChaine = lag(ch.NomChaine) OVER (ORDER BY c.idcollier) THEN '' ELSE ch.NomChaine END AS NomChaine, CONCAT(nbperle, 'x ',po.NomPerle) AS Perle, CASE WHEN c.PrixCollier = lag(c.PrixCollier) OVER (ORDER BY c.idcollier) THEN NULL ELSE c.PrixCollier END AS PrixCollier, c.idChaine AS idProduit FROM colliers AS c JOIN pendentifs AS p ON p.idCollier = c.idCollier AND p.Nomproduit = c.typeProduit JOIN Perles AS po ON p.idPerle = po.idPerle AND p.typeProduit = po.typeProduit JOIN Chaines AS ch ON c.idChaine = ch.idChaine AND ch.typeProduit = c.nomProduit WHERE ch.NomChaine is not null AND p.nbPerle is not null ORDER BY c.idcollier ASC;",
    "Historique achat" : "",
    "Information fidélité" : "",
    "Historique fidélité" : "",
    "NombreCollier" : "",
    "Nombre de points par client" : "",
    "Historique des achats" : "",
    "Liste nouvelles cartes" : ""
}